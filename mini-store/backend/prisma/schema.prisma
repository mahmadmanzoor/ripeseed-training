// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  walletBalance Decimal @default(1000.00) // Initial $1000 credit
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  orders    Order[]
  sentGifts Gift[] @relation("GiftSender")
  receivedGifts Gift[] @relation("GiftReceiver")

  @@map("users")
}

model Order {
  id        String   @id @default(cuid())
  userId    String
  productId Int      // From dummyjson API
  quantity  Int      @default(1)
  totalAmount Decimal
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("orders")
}

model Gift {
  id        String   @id @default(cuid())
  senderId  String
  receiverId String
  productId Int      // From dummyjson API
  quantity  Int      @default(1)
  totalAmount Decimal
  message   String?
  createdAt DateTime @default(now())

  // Relations
  sender User @relation("GiftSender", fields: [senderId], references: [id], onDelete: Cascade)
  receiver User @relation("GiftReceiver", fields: [receiverId], references: [id], onDelete: Cascade)

  @@map("gifts")
}
